<Window
    x:Class="WPFApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Helper="clr-namespace:WPFApp.Helper"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:usercontrols="clr-namespace:WPFApp.CustomControl"
    Title="MainWindow"
    Width="900"
    Height="900"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="*" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            SnapsToDevicePixels="True">
                            <Grid
                                Width="Auto"
                                Margin="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Margin="59,15,0,10"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />

                            </Grid>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                        -->
                        <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>-->
                        <!--
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PwTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            SnapsToDevicePixels="True">
                            <Grid
                                Width="Auto"
                                Margin="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    Grid.Column="0"
                                    Height="Auto"
                                    Margin="59,15,0,10"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <ScrollViewer>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="zero" Height="auto" />
                    <RowDefinition x:Name="one" Height="auto" />
                    <RowDefinition x:Name="two" Height="auto" />
                    <RowDefinition x:Name="three" Height="auto" />
                    <RowDefinition x:Name="four" Height="auto" />
                    <RowDefinition x:Name="five" Height="auto" />
                    <RowDefinition x:Name="six" Height="auto" />
                    <RowDefinition x:Name="seven" Height="auto" />
                    <RowDefinition x:Name="eight" Height="auto" />
                </Grid.RowDefinitions>

                <!--  实现word嵌入到wpf中  -->
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <StackPanel
                        HorizontalAlignment="Center"
                        Background="Gray"
                        Orientation="Horizontal">
                        <Button Click="Button_Click" Content="打开" />
                        <Button
                            Margin="20,0"
                            Click="Button_Click_1"
                            Content="关闭" />
                    </StackPanel>
                    <Border
                        Width="300"
                        Height="300"
                        BorderBrush="Green"
                        BorderThickness="1">
                        <WindowsFormsHost
                            x:Name="WordHost"
                            Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}"
                            Height="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}" />
                    </Border>
                </StackPanel>

                <!--  实现文本编辑功能  -->
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <Grid Width="100">
                        <TextBox
                            x:Name="editableBox"
                            Text="{Binding Text}"
                            Visibility="Collapsed" />
                        <TextBlock
                            x:Name="readOnlyBlock"
                            Margin="0,10"
                            Text="{Binding ElementName=editableBox, Path=Text, Mode=TwoWay}" />
                    </Grid>
                    <Button
                        Width="50"
                        Height="50"
                        Click="Button_Click_2"
                        Content="输入" />
                    <Button
                        Width="50"
                        Height="50"
                        Click="Button_Click_3"
                        Content="完成" />
                </StackPanel>

                <!--  wrappanel流式布局(自适应换行以及补齐位置)  -->
                <WrapPanel
                    Grid.Row="2"
                    HorizontalAlignment="Left"
                    Orientation="Horizontal">
                    <Button
                        Width="300"
                        Height="50"
                        Content="1" />
                    <Button
                        x:Name="button"
                        Width="300"
                        Height="50"
                        Click="Button_Click_5"
                        Content="1" />
                    <Button
                        Width="300"
                        Height="50"
                        Content="1" />
                    <Button
                        Width="300"
                        Height="50"
                        Content="1" />
                    <!--  stackpanel栈式布局(补齐位置)  -->
                    <StackPanel>
                        <Button
                            x:Name="button2"
                            Width="300"
                            Height="50"
                            Click="button_Click_4"
                            Content="2" />
                        <Button
                            Width="300"
                            Height="50"
                            Content="2" />
                        <Button
                            Width="300"
                            Height="50"
                            Content="2" />
                    </StackPanel>
                </WrapPanel>

                <!--  Enter按键监控  -->
                <StackPanel Grid.Row="3">
                    <TextBox>
                        <!--  方式一  -->
                        <TextBox.InputBindings>
                            <KeyBinding
                                Key="Enter"
                                Command="{Binding Path=EnterCommand}"
                                CommandParameter="{Binding Text, RelativeSource={RelativeSource Self}}" />
                        </TextBox.InputBindings>
                        <!--  方式二  -->
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <EventSetter Event="PreviewKeyDown" Handler="OnPreviewKeyDown" />
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>

                <!--  添加 CheckBox 和 PasswordBox  -->
                <Grid
                    Grid.Row="4"
                    Width="408"
                    Height="54"
                    Margin="32,225,32,276"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top">
                    <TextBox
                        x:Name="PwTxTBox"
                        Width="408"
                        Height="54"
                        VerticalAlignment="Center"
                        BorderBrush="#dcdcdc"
                        BorderThickness="1"
                        FontSize="18"
                        Text="{Binding Pwd, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        Visibility="Collapsed" />
                    <PasswordBox
                        x:Name="PwBox"
                        Width="408"
                        Height="54"
                        VerticalAlignment="Center"
                        Helper:PasswordBoxHelper.Attach="True"
                        Helper:PasswordBoxHelper.Password="{Binding Path=Pwd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        BorderBrush="#dcdcdc"
                        BorderThickness="1"
                        FontSize="18" />
                    <Image
                        x:Name="image"
                        Grid.ColumnSpan="1"
                        Width="27"
                        Height="32"
                        Margin="20,10,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Source="/WPFApp;component/Images/头像.png"
                        Stretch="Fill" />
                    <CheckBox
                        Name="myCheckBox"
                        Margin="0,0,20,0"
                        HorizontalAlignment="Right"
                        IsChecked="{Binding IsChecked, Mode=TwoWay}">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="CheckBox">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image
                                                            Width="16"
                                                            Height="16"
                                                            Source="/WPFApp;component/Images/隐藏密码.png" />
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="CheckBox">
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image
                                                            Width="16"
                                                            Height="16"
                                                            Source="/WPFApp;component/Images/显示密码.png" />
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                </Grid>

                <Button
                    Grid.Row="5"
                    Width="100"
                    Click="Button_Click_6"
                    Content="浏览笔录" />

                <Path
                    Grid.Row="5"
                    Width="20"
                    Height="10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="Red"
                    Stroke="White">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="0,0">
                                <LineSegment Point="10,10" />
                                <LineSegment Point="20,0" />
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>

                <Border Grid.Row="6" Height="300">
                    <ScrollViewer
                        x:Name="HyperlinkWord"
                        HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Visible">
                        <!--<FlowDocumentScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <FlowDocument>
                            <Section x:Name="section1">
                                <Paragraph>-->
                        <TextBlock FontSize="20">
                            庭审提纲<Hyperlink Command="{Binding NavigateCommand}" CommandParameter="section1">
                                Go to Section 1
                            </Hyperlink>
                            <Hyperlink Command="{Binding NavigateCommand}" CommandParameter="section2">Go to Section 2</Hyperlink>
                            <LineBreak />
                            1、原被告身份核实:<LineBreak />
                            &#160;&#160;&#160;&#160;<Hyperlink
                                Command="{Binding NavigateCommand}"
                                CommandParameter="section2"
                                Foreground="Black"
                                TextDecorations="None">
                                1、原告:
                            </Hyperlink>
                            <LineBreak />
                            &#160;&#160;&#160;&#160;<Hyperlink
                                Command="{Binding NavigateCommand}"
                                CommandParameter="section2"
                                Foreground="Black"
                                TextDecorations="None">
                                2、被告:
                            </Hyperlink>
                            2、诉讼请求:<LineBreak />
                            &#160;&#160;&#160;&#160;<Hyperlink
                                Command="{Binding NavigateCommand}"
                                CommandParameter="section1"
                                Foreground="Black"
                                TextDecorations="None">
                                除了检查明确诉讼请求之外，还需要准备请求权基础、诉请依据和案件标的额的计算依据及赔偿项目拆分若有)
                            </Hyperlink>
                            3、事实与理:<LineBreak />
                            &#160;&#160;&#160;&#160;<Hyperlink
                                Command="{Binding NavigateCommand}"
                                CommandParameter="section1"
                                Foreground="Black"
                                TextDecorations="None">
                                原告:三分钟简要案件故事;
                            </Hyperlink>
                        </TextBlock>
                        <!--</FlowDocument>
                    </FlowDocumentScrollViewer>-->
                    </ScrollViewer>
                </Border>

                <Border Grid.Row="7" Height="200">
                    <Button Height="100">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border
                                    x:Name="Border"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                    <Image
                                        x:Name="img"
                                        Cursor="Hand"
                                        Source="/WPFApp;component/Images/btn_分享.png"
                                        Stretch="None"
                                        ToolTip="分享" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Padding" Value="5" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Border>

                <Border Grid.Row="8" Height="100">
                    <StackPanel>
                        <Button Click="Button_Click_7" Content="获取屏幕属性" />
                    </StackPanel>
                </Border>
            </Grid>
        </ScrollViewer>

        <!--  顶部消息提示  -->
        <Grid
            Width="500"
            Height="100"
            Margin="0,300,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel
                x:Name="TopTips"
                Grid.Column="1"
                usercontrols:TipBar.Direction="Top"
                usercontrols:TipBar.EnterPostion="-150"
                usercontrols:TipBar.EnterStyle="Vertical"
                usercontrols:TipBar.HAligin="Center"
                usercontrols:TipBar.MaxTipCount="1"
                usercontrols:TipBar.WaitTime="2" />
        </Grid>
    </Grid>
</Window>